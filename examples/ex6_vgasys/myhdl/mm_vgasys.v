// File: mm_vgasys.v
// Generated by MyHDL 0.9dev
// Date: Sun Mar  8 19:46:55 2015


`timescale 1ns/1ns

module mm_vgasys (
    clock,
    reset,
    vselect,
    hsync,
    vsync,
    red,
    green,
    blue,
    pxlen,
    active
);


input clock;
input reset;
input vselect;
output hsync;
reg hsync;
output vsync;
reg vsync;
output [9:0] red;
wire [9:0] red;
output [9:0] green;
wire [9:0] green;
output [9:0] blue;
wire [9:0] blue;
output pxlen;
reg pxlen;
output active;
reg active;

reg [2:0] gvga_vga_state;
reg [19:0] gvga_vcd;
reg [9:0] gvga_hpxl;
reg [8:0] gvga_vpxl;
reg [29:0] gvga_vmem_red;
reg [10:0] gvga_hcd;
reg [29:0] gvga_vmem_blue;
reg [29:0] gvga_vmem_green;
reg [29:0] gbar_pval;
reg [31:0] gbar_ssel;





always @(posedge clock) begin: MM_VGASYS_GVGA_RTL_SYNC
    reg signed [3-1:0] xcnt;
    reg [11-1:0] hcnt;
    reg [20-1:0] vcnt;
    if (reset == 0) begin
        gvga_vpxl <= 0;
        gvga_vcd <= 0;
        vsync <= 0;
        gvga_hpxl <= 0;
        hsync <= 0;
        pxlen <= 0;
        gvga_hcd <= 0;
        hcnt = 0;
        vcnt = 0;
        xcnt = 0;
    end
    else begin
        hcnt = (hcnt + 1);
        vcnt = (vcnt + 1);
        if ((vcnt == 833333)) begin
            vcnt = 0;
            hcnt = 0;
        end
        else if ((vcnt > 768000)) begin
            hcnt = (1600 - 1);
        end
        else if ((hcnt >= 1600)) begin
            hcnt = 0;
        end
        xcnt = (xcnt + 1);
        if ((hcnt == 1)) begin
            xcnt = 1;
        end
        else if ((xcnt == 2)) begin
            xcnt = 0;
        end
        if (((xcnt == 0) && (hcnt <= 1250))) begin
            pxlen <= 1'b1;
        end
        else begin
            pxlen <= 1'b0;
        end
        if (((hcnt >= (1250 + 50)) && (hcnt < ((1250 + 50) + 200)))) begin
            hsync <= 1'b0;
        end
        else begin
            hsync <= 1'b1;
        end
        if (((vcnt >= (768000 + 17000)) && (vcnt < ((768000 + 17000) + 3200)))) begin
            vsync <= 1'b0;
        end
        else begin
            vsync <= 1'b1;
        end
        if ((($signed({1'b0, gvga_hpxl}) < (640 - 1)) && (xcnt == 0) && (hcnt <= 1250))) begin
            gvga_hpxl <= (gvga_hpxl + 1);
        end
        else if ((hcnt > (1250 + 50))) begin
            gvga_hpxl <= 0;
        end
        if ((($signed({1'b0, hcnt}) >= (1600 - 1)) && (vcnt < 768000))) begin
            gvga_vpxl <= (gvga_vpxl + 1);
        end
        else if ((vcnt > (768000 + 17000))) begin
            gvga_vpxl <= 0;
        end
        gvga_hcd <= hcnt;
        gvga_vcd <= vcnt;
    end
end


always @(gvga_vcd, hsync, gvga_hcd, vsync) begin: MM_VGASYS_GVGA_RTL_STATE
    if ((!hsync)) begin
        gvga_vga_state = 3'b011;
    end
    else if ((!vsync)) begin
        gvga_vga_state = 3'b110;
    end
    else if ((gvga_hcd < 1250)) begin
        gvga_vga_state = 3'b001;
    end
    else if (((gvga_vcd >= 768000) && (gvga_vcd < (768000 + 17000)))) begin
        gvga_vga_state = 3'b101;
    end
    else if (((gvga_vcd >= (768000 + 17000)) && (gvga_vcd < ((768000 + 17000) + 3200)))) begin
        // pass
    end
    else if (((gvga_vcd >= ((768000 + 17000) + 3200)) && (gvga_vcd < 833333))) begin
        gvga_vga_state = 3'b111;
    end
    else if (((gvga_hcd >= 1250) && (gvga_hcd < (1250 + 50)))) begin
        gvga_vga_state = 3'b010;
    end
    else if (((gvga_hcd >= (1250 + 50)) && (gvga_hcd < ((1250 + 50) + 200)))) begin
        // pass
    end
    else if (((gvga_hcd >= ((1250 + 50) + 200)) && (gvga_hcd < (((1250 + 50) + 200) + 100)))) begin
        gvga_vga_state = 3'b100;
    end
    if ((gvga_hcd < 1250)) begin
        active = 1'b1;
    end
    else begin
        active = 1'b0;
    end
end



assign red = gvga_vmem_red;
assign green = gvga_vmem_green;
assign blue = gvga_vmem_blue;


always @(gvga_hpxl) begin: MM_VGASYS_GBAR_RTL_PVAL
    integer ii;
    integer sel;
    sel = 0;
    for (ii=0; ii<8; ii=ii+1) begin
        if (($signed({1'b0, gvga_hpxl}) > (ii * 80))) begin
            sel = ii;
        end
    end
    gbar_ssel = sel;
    case (sel)
        0: gbar_pval = 1073741823;
        1: gbar_pval = 1073740800;
        2: gbar_pval = 1048575;
        3: gbar_pval = 1047552;
        4: gbar_pval = 1072694271;
        5: gbar_pval = 1072693248;
        6: gbar_pval = 1023;
        default: gbar_pval = 0;
    endcase
end


always @(posedge clock) begin: MM_VGASYS_GBAR_RTL_RGB
    if (reset == 0) begin
        gvga_vmem_blue <= 0;
        gvga_vmem_green <= 0;
        gvga_vmem_red <= 0;
    end
    else begin
        gvga_vmem_red <= ((gbar_pval >>> 20) & 1023);
        gvga_vmem_green <= ((gbar_pval >>> 10) & 1023);
        gvga_vmem_blue <= (gbar_pval & 1023);
    end
end

endmodule
