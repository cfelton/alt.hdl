//
// Generated by Bluespec Compiler, version 2013.12.beta1 (build 32746, 2013-12-02)
//
// On Sun Feb 23 22:22:13 CST 2014
//
//
// Ports:
// Name                         I/O  size props
// update                         O    16
// RDY_update                     O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// update_x                       I    16
// update_y                       I    16
// EN_update                      I     1 unused
//
// Combinational paths from inputs to outputs:
//   (update_x, update_y) -> update
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMaths1(CLK,
		RST_N,

		update_x,
		update_y,
		EN_update,
		update,
		RDY_update);
  parameter [15 : 0] m_val = 16'b0;
  input  CLK;
  input  RST_N;

  // actionvalue method update
  input  [15 : 0] update_x;
  input  [15 : 0] update_y;
  input  EN_update;
  output [15 : 0] update;
  output RDY_update;

  // signals for module outputs
  wire [15 : 0] update;
  wire RDY_update;

  // remaining internal signals
  wire [31 : 0] update_x_PLUS_update_y_MUL_m_val___d2;

  // actionvalue method update
  assign update = update_x_PLUS_update_y_MUL_m_val___d2[15:0] ;
  assign RDY_update = 1'd1 ;

  // remaining internal signals
  assign update_x_PLUS_update_y_MUL_m_val___d2 =
	     (update_x + update_y) * m_val ;
endmodule  // mkMaths1

