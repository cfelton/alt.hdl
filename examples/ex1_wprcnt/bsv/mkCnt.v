//
// Generated by Bluespec Compiler, version 2013.12.beta1 (build 32746, 2013-12-02)
//
// On Thu Feb 27 00:00:22 CST 2014
//
//
// Ports:
// Name                         I/O  size props
// out                            O     5 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCnt(CLK,
	     RST_N,

	     out);
  input  CLK;
  input  RST_N;

  // value method out
  output [4 : 0] out;

  // signals for module outputs
  wire [4 : 0] out;

  // register x
  reg [4 : 0] x;
  wire [4 : 0] x$D_IN;
  wire x$EN;

  // inputs to muxes for submodule ports
  wire [4 : 0] MUX_x$write_1__VAL_1, MUX_x$write_1__VAL_2;

  // value method out
  assign out = x ;

  // inputs to muxes for submodule ports
  assign MUX_x$write_1__VAL_1 = x + 5'd1 ;
  assign MUX_x$write_1__VAL_2 = x - 5'd1 ;

  // register x
  assign x$D_IN = (x != 5'd31) ? MUX_x$write_1__VAL_1 : MUX_x$write_1__VAL_2 ;
  assign x$EN = 1'b1 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        x <= `BSV_ASSIGNMENT_DELAY 5'd0;
      end
    else
      begin
        if (x$EN) x <= `BSV_ASSIGNMENT_DELAY x$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    x = 5'h0A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkCnt

